{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s_yun\\\\save-money-app\\\\front\\\\src\\\\components\\\\accounts_chart\\\\AccountsTrend.js\";\nimport \"../../style/AccountsTrend.scss\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst AccountsTrend = ({\n  categoryNm,\n  accountSum\n}) => {\n  const label = [];\n  const amount = [];\n  var index1 = categoryNm.length; //eslint-disable-line no-unused-vars\n  var index2 = accountSum.length; //eslint-disable-line no-unused-vars\n\n  categoryNm.forEach((categoryNm, index1) => {\n    label[index1] = categoryNm.category_nm;\n  });\n  accountSum.forEach((accountSum, index2) => {\n    amount[index2] = accountSum.account_mount;\n  });\n  const data = {\n    labels: label,\n    datasets: [{\n      label: \"합계\",\n      data: amount,\n      backgroundColor: [\"#D363D3\", \"#CCCCFF\", \"#C8F2C8\", \"#800000\", \"#FFCC66\", \"#996633\", \"#90214E\", \"#0000CC\", \"#F9F2F9\", \"#66FF33\", \"#666699\", \"#009999\", \"#FF6600\"],\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"right\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chartDiv_title\",\n      children: \" 2024\\uB144 \\uC218\\uC785/\\uC9C0\\uCD9C \\uBD84\\uC11D \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options,\n      className: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = AccountsTrend;\nexport default AccountsTrend;\nvar _c;\n$RefreshReg$(_c, \"AccountsTrend\");","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","AccountsTrend","categoryNm","accountSum","label","amount","index1","length","index2","forEach","category_nm","account_mount","data","labels","datasets","backgroundColor","borderWidth","options","responsive","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/s_yun/save-money-app/front/src/components/accounts_chart/AccountsTrend.js"],"sourcesContent":["import \"../../style/AccountsTrend.scss\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst AccountsTrend = ({ categoryNm, accountSum }) => {\r\n  const label = [];\r\n  const amount = [];\r\n  var index1 = categoryNm.length; //eslint-disable-line no-unused-vars\r\n  var index2 = accountSum.length; //eslint-disable-line no-unused-vars\r\n\r\n  categoryNm.forEach((categoryNm, index1) => {\r\n    label[index1] = categoryNm.category_nm;\r\n  });\r\n\r\n  accountSum.forEach((accountSum, index2) => {\r\n    amount[index2] = accountSum.account_mount;\r\n  });\r\n\r\n  const data = {\r\n    labels: label,\r\n    datasets: [\r\n      {\r\n        label: \"합계\",\r\n        data: amount,\r\n        backgroundColor: [\r\n          \"#D363D3\",\r\n          \"#CCCCFF\",\r\n          \"#C8F2C8\",\r\n          \"#800000\",\r\n          \"#FFCC66\",\r\n          \"#996633\",\r\n          \"#90214E\",\r\n          \"#0000CC\",\r\n          \"#F9F2F9\",\r\n          \"#66FF33\",\r\n          \"#666699\",\r\n          \"#009999\",\r\n          \"#FF6600\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"right\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chartDiv\">\r\n      <h3 className=\"chartDiv_title\"> 2024년 수입/지출 분석 </h3>\r\n      <Doughnut data={data} options={options} className=\"chart\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountsTrend;\r\n"],"mappings":";AAAA,OAAO,gCAAgC;AACvC,SAASA,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3CN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,MAAMK,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EACpD,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,MAAM,GAAGJ,UAAU,CAACK,MAAM,CAAC,CAAC;EAChC,IAAIC,MAAM,GAAGL,UAAU,CAACI,MAAM,CAAC,CAAC;;EAEhCL,UAAU,CAACO,OAAO,CAAC,CAACP,UAAU,EAAEI,MAAM,KAAK;IACzCF,KAAK,CAACE,MAAM,CAAC,GAAGJ,UAAU,CAACQ,WAAW;EACxC,CAAC,CAAC;EAEFP,UAAU,CAACM,OAAO,CAAC,CAACN,UAAU,EAAEK,MAAM,KAAK;IACzCH,MAAM,CAACG,MAAM,CAAC,GAAGL,UAAU,CAACQ,aAAa;EAC3C,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAET,KAAK;IACbU,QAAQ,EAAE,CACR;MACEV,KAAK,EAAE,IAAI;MACXQ,IAAI,EAAEP,MAAM;MACZU,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBxB,OAAA;MAAIuB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpD5B,OAAA,CAACF,QAAQ;MAACe,IAAI,EAAEA,IAAK;MAACK,OAAO,EAAEA,OAAQ;MAACK,SAAS,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACC,EAAA,GAvDI3B,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}